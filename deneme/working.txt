using Oracle.ManagedDataAccess.Client;
using System;
using System.Data;
using System.Windows.Forms;
using System.IO;
using System.Linq;
using static System.Net.WebRequestMethods;
using System.Collections.Generic;
using System.Runtime.CompilerServices;

namespace denemeler
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            {
                //string oradb = "Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=149.102.138.15)(PORT=1611))(CONNECT_DATA=(SERVICE_NAME=datateamdb)));User ID=GRAPH;Password=GRAPH";
                OracleConnection conn = new OracleConnection(textBox1.Text);
                try
                {
                    conn.Open();
                    OracleCommand cmd = new OracleCommand();
                    cmd.Connection = conn;
                    string selectedSchema = dataGridView1.Rows[e.RowIndex].Cells[0].Value.ToString();
                    cmd.CommandText = $"SELECT name FROM {selectedSchema}.TNRK_MIGRATIONS";
                    cmd.CommandType = CommandType.Text;

                    OracleDataAdapter adapter = new OracleDataAdapter(cmd);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);

                    if (dt.Rows.Count > 0)
                    {
                        dataGridView3.DataSource = dt;

                    }
                    else
                    {
                        MessageBox.Show("Kayıt bulunamadı");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Hata: " + ex.Message);
                }
                finally
                {
                    conn.Close();
                }

            }
        }

        private class MigFile //listede rakam olarak gözükmesi için class ekledik
        {
            public string Name { get; set; }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            folderBrowserDialog1.ShowDialog();
            string folderPath = folderBrowserDialog1.SelectedPath;
            DirectoryInfo foldersinfo = new DirectoryInfo(folderPath);
            FileInfo[] folders = foldersinfo.GetFiles();

            List<MigFile> fileNames = new List<MigFile>();

            foreach (FileInfo file in folders)
            {
                MigFile migFile = new MigFile();
                migFile.Name = file.Name;
                fileNames.Add(migFile);
            }

            dataGridView2.DataSource = fileNames;
        }

        private void CompareAndPopulateGrid4()
        {
            // dataGridView2'den verileri al
            List<MigFile> grid2Data = (List<MigFile>)dataGridView2.DataSource;

            // dataGridView3'den verileri al
            DataTable grid3Data = (DataTable)dataGridView3.DataSource;

            // Farklı verileri saklamak için bir liste oluştur
            List<MigFile> differentFiles = new List<MigFile>();

            // dataGridView2'deki her dosyayı kontrol et
            foreach (MigFile file in grid2Data)
            {
                // Dosyanın adını dataGridView3'teki verilerle karşılaştır
                bool found = false;
                foreach (DataRow row in grid3Data.Rows)
                {
                    string fileName = row["name"].ToString();
                    if (file.Name.Equals(fileName, StringComparison.OrdinalIgnoreCase))
                    {
                        found = true;
                        break;
                    }
                }

                // Dosya dataGridView3'te bulunmadıysa, farklı dosyalara ekle
                if (!found)
                {
                    differentFiles.Add(file);
                }
            }

            // Farklı dosyaları dataGridView4'e ata
            dataGridView4.DataSource = differentFiles;
        }


        private void button3_Click(object sender, EventArgs e)
        {
            string oradb = "Data Source=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=149.102.138.15)(PORT=1611))(CONNECT_DATA=(SERVICE_NAME=datateamdb)));User ID=GRAPH;Password=GRAPH";
            OracleConnection conn = new OracleConnection(textBox1.Text);

            try
            {
                conn.Open();
                OracleCommand cmd = new OracleCommand();
                cmd.Connection = conn;
                cmd.CommandText = "SELECT username SCHEMAS FROM all_users WHERE username LIKE 'DT%' AND username <> 'DTGRAPH' ORDER BY username";
                cmd.CommandType = CommandType.Text;

                OracleDataAdapter adapter = new OracleDataAdapter(cmd);
                DataTable dt = new DataTable();
                adapter.Fill(dt);

                if (dt.Rows.Count > 0)
                {
                    dataGridView1.DataSource = dt;

                }
                else
                {
                    MessageBox.Show("Kayıt bulunamadı");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Hata: " + ex.Message);
            }
            finally
            {
                conn.Close();
            }

        }


        private void folderBrowserDialog1_HelpRequest(object sender, EventArgs e)
        {

        }

        private void dataGridView2_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }
        private void dataGridView3_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void dataGridView4_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            CompareAndPopulateGrid4();

        }

    }
}
